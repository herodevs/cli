name: Manual Release
run-name: Release ${{ github.ref_name }} (pushed by ${{ github.actor }})${{ inputs.dry-run == true && ' --dry-run' || '' }}

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'NPM tag to publish to'
        type: choice
        options:
          - beta
          - alpha
          - latest
          - next
        default: beta
      dry-run:
        description: 'Dry run the release'
        type: boolean
        default: true
permissions:
  contents: read

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: '.nvmrc'
      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Determine Oclif channel
        id: oclif-channel
        run: |
          VERSION=$(node -p "require('./package.json').version")
          if [[ "$VERSION" == *"-beta"* ]]; then
            echo "oclif_channel=beta" >> $GITHUB_OUTPUT
          elif [[ "$VERSION" == *"-alpha"* ]]; then
            echo "oclif_channel=alpha" >> $GITHUB_OUTPUT
          else
            echo "oclif_channel=stable" >> $GITHUB_OUTPUT
          fi
    outputs:
      version: ${{ steps.version.outputs.version }}
      oclif_channel: ${{ steps.oclif-channel.outputs.oclif_channel }}

  test:
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - run: npm run build
      - run: npm test
      - run: npm run test:e2e

  upload-assets:
    runs-on: ubuntu-latest
    needs: [check-version, test]
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      # Build
      - run: npm ci
      - run: npm run build

      # Build platform-specific tarballs
      - name: Install linux toolchain
        run: |
          sudo apt update
          sudo apt install nsis p7zip-full p7zip-rar -y

      - name: Build linux-x64 tarball
        run: |
          mkdir -p dist/linux
          cd dist/linux
          npx oclif pack tarballs --targets=linux-x64 --no-xz
          cd ../..

      - name: Build win32-x64 tarball
        run: |
          mkdir -p dist/windows
          cd dist/windows
          npx oclif pack tarballs --targets=win32-x64 --no-xz
          cd ../..

      - name: Build darwin-arm64 tarball
        run: |
          mkdir -p dist/darwin
          cd dist/darwin
          npx oclif pack tarballs --targets=darwin-arm64 --no-xz
          cd ../..

      # Move tarballs to dist root
      - name: Consolidate tarballs
        run: |
          mv dist/linux/* dist/
          mv dist/windows/* dist/
          mv dist/darwin/* dist/
          rm -rf dist/linux dist/windows dist/darwin

      # S3 Distribution
      - name: Configure AWS credentials
        if: ${{ !inputs.dry-run }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload and promote to S3
        if: ${{ !inputs.dry-run }}
        run: |
          # Enable oclif debug logging
          export DEBUG=oclif:*

          # Upload tarballs
          npx oclif upload tarballs \
            --targets=linux-x64,win32-x64,darwin-arm64 \
            --no-xz

          # Promote to channel
          npx oclif promote \
            --channel=${{ needs.check-version.outputs.oclif_channel }} \
            --version=${{ needs.check-version.outputs.version }} \
            --sha=${{ github.sha }} \
            --indexes \
            --targets=linux-x64,win32-x64,darwin-arm64 \
            --ignore-missing

  npm-publish:
    runs-on: ubuntu-latest
    needs: [check-version, test, upload-assets]
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      # Clean build for npm publishing
      - run: npm ci
      - run: npm run build

      # Dry run NPM publish
      - name: Dry run NPM publish
        if: ${{ inputs.dry-run }}
        run: npm publish --tag ${{ inputs.channel }} --provenance --access public --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.HD_CLI_NPM_TOKEN }}
  
      # NPM Release
      # - name: Create NPM release
      #   if: ${{ !inputs.dry-run }}
      #   run: npm publish --tag ${{ inputs.channel }} --provenance --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.HD_CLI_NPM_TOKEN }}
