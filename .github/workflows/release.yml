name: Production Release
run-name: Production Release ${{ github.ref_name }} (pushed by ${{ github.actor }})

on:
  push:
    tags:
      - v*
permissions:
  contents: read

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'
      - uses: ./.github/actions/verify-version
        id: verify-version
      - name: Verify tag matches version
        run: |
          VERSION=${{ steps.verify-version.outputs.version }}
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          if [ "$VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Package version ($VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi
      - name: Determine Oclif channel
        run: |
          VERSION=${{ steps.verify-version.outputs.version }}
          if [[ "$VERSION" == *"-beta"* ]]; then
            echo "oclif_channel=beta" >> $GITHUB_OUTPUT
          elif [[ "$VERSION" == *"-alpha"* ]]; then
            echo "oclif_channel=alpha" >> $GITHUB_OUTPUT
          elif [[ "$VERSION" == *"-next"* ]]; then
            echo "oclif_channel=next" >> $GITHUB_OUTPUT
          else
            echo "oclif_channel=latest" >> $GITHUB_OUTPUT
          fi
    outputs:
      version: ${{ steps.verify-version.outputs.version }}
      oclif_channel: ${{ steps.determine-channel.outputs.oclif_channel }}

  test:
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'
      - run: npm ci
      - run: npm run build
      - run: npm test
      - run: npm run test:e2e

  upload-assets:
    runs-on: ubuntu-latest
    needs: [check-version, test]
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      # Build
      - run: npm ci
      - run: npm run build

      # Build platform-specific tarballs
      - name: Install linux toolchain
        run: |
          sudo apt update
          sudo apt install nsis p7zip-full p7zip-rar -y

      - name: Build all tarballs in parallel
        run: |
          npx oclif pack tarballs --targets=linux-x64,win32-x64,darwin-arm64 --no-xz --parallel

      # S3 Distribution
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload and promote to S3
        run: |
          # Enable oclif debug logging
          export DEBUG=oclif:*

          # Upload tarballs
          npx oclif upload tarballs \
            --targets=linux-x64,win32-x64,darwin-arm64 \
            --no-xz

          # Get shortened SHA (first 7 characters)
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "Using shortened SHA: $SHORT_SHA"

          # Promote to channel
          npx oclif promote \
            --channel=${{ needs.check-version.outputs.oclif_channel }} \
            --version=${{ needs.check-version.outputs.version }} \
            --sha=$SHORT_SHA \
            --indexes \
            --targets=linux-x64,win32-x64,darwin-arm64 \
            --ignore-missing

  npm-publish:
    runs-on: ubuntu-latest
    needs: [check-version, test, upload-assets]
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      # Clean build for npm publishing
      - run: npm ci
      - run: npm run build

      # NPM Release
      - name: Create NPM release
        run: npm publish --tag ${{ needs.check-version.outputs.oclif_channel }} --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.HD_CLI_NPM_TOKEN }}

      # Get changelog content
      - name: Extract changelog content
        id: extract-changelog
        uses: ./.github/actions/extract-changelog
        with:
          version: ${{ needs.check-version.outputs.version }}

      # Create GitHub Release (draft - will be published manually from GitHub UI or CLI)
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          name: Release v${{ needs.check-version.outputs.version }} ${{ needs.check-version.outputs.oclif_channel == 'latest' && 'Latest' || needs.check-version.outputs.oclif_channel }}
          body: |
            This release includes the following platform-specific tarballs:
            - macOS (ARM64)
            - Windows (x64)
            - Linux (x64)

            ## Changes
            ${{ steps.extract-changelog.outputs.content }}
          files: |
            dist/*.tar.gz
          draft: true
          prerelease: ${{ needs.check-version.outputs.oclif_channel != 'latest' }}
          discussion_category_name: Announcements
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
