name: release
run-name: Release ${{ github.ref_name }} (pushed by ${{ github.actor }})${{ inputs.dry-run == true && ' --dry-run' || '' }}

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'NPM tag to publish to'
        type: choice
        options:
          - latest
          - next
          - beta
          - alpha
        default: latest
      dry-run:
        description: 'Dry run the release'
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  check:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: get-npm-version
        id: check
        uses: martinbeentjes/npm-get-version-action@3cf273023a0dda27efcd3164bdfb51908dd46a5b # v1.3.1

  build:
    strategy:
      matrix:
        include:
          # - os: windows-2022
          #   target: x86_64-pc-windows-msvc
          #   code-target: win32-x64
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: macos-14
            target: aarch64-apple-darwin
            code-target: darwin-arm64
    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    needs: check
    env:
      version: ${{ needs.check.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: '.nvmrc'
      - name: Install linux toolchain
        if: matrix.code-target == 'linux-x64'
        run: |
          sudo apt install nsis p7zip-full p7zip-rar -y
      - name: Install win32 toolchain
        if: matrix.code-target == 'win32-x64'
        run: |
          choco install 7zip nsis grep -y
          echo "C:\Program Files (x86)\GnuWin32\bin" >> $GITHUB_PATH
      - name: Install npm dependencies
        run: npm ci
      - name: Build javascript
        run: npm run build
      - name: Build binaries
        shell: bash
        run: |
          npm run pack
      - name: Upload CLI artifact
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: cli-binaries
          path: |
            ./dist/hd-v*-darwin-arm64.tar.gz
            ./dist/hd-v*-linux-x64.tar.gz
          if-no-files-found: error
  publish-cli:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install Node.js
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
      - name: Create artifacts folder if it doesn't exist
        run: mkdir -p artifacts
      - name: Download CLI artifacts
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          pattern: cli-binaries
          path: artifacts
      - name: Debug artifact paths
        run: ls -lah artifacts/
      - name: Log release channel  
        run: |
          echo "Publishing to channel: ${{ inputs.channel }}"
      - name: Publish npm packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.HD_CLI_NPM_TOKEN }}
          NPM_TAG: ${{ inputs.channel }}
        run: |
          # Create package directory
          mkdir -p package
          # Move all binaries into package directory
          cp artifacts/*.tar.gz package/
          # Create package.json for the combined package
          cat > package/package.json << 'EOF'
          {
            "name": "@herodevs/cli",
            "version": "${{ needs.check.outputs.version }}",
            "description": "The HeroDevs CLI",
            "author": "HeroDevs, Inc",
            "license": "MIT",
            "repository": {
              "type": "git",
              "url": "https://github.com/herodevs/cli.git"
            },
            "homepage": "https://github.com/herodevs/cli",
            "files": [
              "*.tar.gz",
              "LICENSE",
              ".bin/hd.js"
            ],
            "os": [
              "darwin",
              "linux"
            ],
            "cpu": [
              "arm64",
              "x64"
            ],
            "engines": {
              "node": ">=8"
            }
          }
          EOF
          
          # Create .bin directory and copy the hd.js script
          mkdir -p package/.bin
          cp assets/hd.js package/.bin/
          chmod +x package/.bin/hd.js

          # Publish the package
          npm publish "./package" --tag "$NPM_TAG" --access public --provenance ${{ inputs.dry-run == true && '--dry-run' || '' }}
      - name: Verify publish
        if: ${{ inputs.dry-run == false }}
        run: |
          echo "Verifying package..."
          npm view @herodevs/cli version --tag ${{ inputs.channel }}
      - name: Create GitHub release and tag
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.dry-run == false }}
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: CLI v${{ needs.check.outputs.version }}
          tag_name: cli/v${{ needs.check.outputs.version }}
          draft: false
          files: |
            artifacts/*.tar.gz
          fail_on_unmatched_files: true
          generate_release_notes: true
