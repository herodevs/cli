name: Release
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created:  ${{ steps.release.outputs.release_created }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  release:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@5
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run build
      - name: Create NPM release
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.HD_CLI_NPM_TOKEN }}

  publish-images:
    name: Publish Images
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@5
      - name: Parse tag
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - uses: docker/metadata-action@v5
        id: meta
        with:
          # Enable when we have Docker Hub set up
          images: |
            name=ghcr.io/herodevs/eol-scan
            name=docker.io/herodevs/eol-scan,enable=false
          tags: |
            type=sha,format=long
            type=raw,value=latest
            type=raw,value=${{ env.VERSION }}

      - uses: docker/login-action@v3
        # Enable when we have Docker Hub set up
        if: ${{ false }}
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: . 
          file: ./ci/image.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max